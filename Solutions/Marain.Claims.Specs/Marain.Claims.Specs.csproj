<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="$(EndjinProjectPropsPath)" Condition="$(EndjinProjectPropsPath) != ''" />
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <IsPackable>false</IsPackable>
    <RootNamespace>Marain.Claims.Specs</RootNamespace>
  </PropertyGroup>

  <PropertyGroup>
    <!--
    This project tests runnable artifacts. To ensure repeatability, we need floating versions in
    PackageReferences (either in this project, or anywhere in its dependency tree) get resolved to
    the specific latest matching version. We use floating versions in components to avoid needing
    to update all of Corvus and Marain any time Microsoft releases a new patch of .NET, but we
    still need to be deliberate about taking those updates where they emerge at the top of the
    food chain. This is one of those places, so we use a package lock file to ensure repeatability.
    The package versions we reference will only change when we explicitly take the change.
    -->
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>

    <!--
    This ensures that during CI builds, the package restore will use exactly what's in the lock
    file, giving us repeatability. New versions of any of the packages for which we take floating
    version references (either directly, or implicitly through transitive dependencies) will not
    be picked up during those builds.
    When using the project locally, this won't be set, meaning that if any floating references
    to newer versions become available, they will automatically be acquired, and there will be a
    record of this happening in source control: the packages.lock.json file will be updated.
    -->
    <RestoreLockedMode Condition="'$(ContinuousIntegrationBuild)' == 'true'">true</RestoreLockedMode>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <NoWarn>RCS1029;CS1591; SA1633</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <NoWarn>RCS1029;CS1591; SA1633</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Corvus.Testing.ReqnRoll.NUnit" Version="4.0.5" />
    <PackageReference Include="Endjin.RecommendedPractices.GitHub" Version="2.1.18">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Idg.AsyncTestTools" Version="1.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="[8.0.*,)" />
    <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="[8.0.*,)" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="[8.0.*,)" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="[8.0.*,)" />
    <PackageReference Include="NSubstitute" Version="5.3.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Marain.Claims.Client\Marain.Claims.Client.csproj" />
    <ProjectReference Include="..\Marain.Claims.OpenApi.Service\Marain.Claims.OpenApi.Service.csproj" />
    <ProjectReference Include="..\Marain.Claims.OpenApi\Marain.Claims.OpenApi.csproj" />
    <ProjectReference Include="..\Marain.Claims.Specs.Common\Marain.Claims.Specs.Common.csproj" />
    <ProjectReference Include="..\Marain.Claims.Tenancy.AzureBlob\Marain.Claims.Tenancy.AzureBlob.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="specflow.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ServiceManifests\" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="..\Marain.Claims.Deployment\ServiceManifests\ClaimsServiceManifest.jsonc" Link="ServiceManifests\ClaimsServiceManifest.jsonc" />
  </ItemGroup>

</Project>