// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Marain.Claims.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class CreateClaimPermissionsRequest
    {
        /// <summary>
        /// Initializes a new instance of the CreateClaimPermissionsRequest
        /// class.
        /// </summary>
        public CreateClaimPermissionsRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateClaimPermissionsRequest
        /// class.
        /// </summary>
        public CreateClaimPermissionsRequest(string id, IList<ResourceAccessRule> resourceAccessRules = default(IList<ResourceAccessRule>), IList<ResourceAccessRuleSetIdOnly> resourceAccessRuleSets = default(IList<ResourceAccessRuleSetIdOnly>))
        {
            Id = id;
            ResourceAccessRules = resourceAccessRules;
            ResourceAccessRuleSets = resourceAccessRuleSets;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for CreateClaimPermissionsRequest class.
        /// </summary>
        static CreateClaimPermissionsRequest()
        {
            ContentType = "application/vnd.marain.claims.claimpermissions";
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResourceAccessRules")]
        public IList<ResourceAccessRule> ResourceAccessRules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResourceAccessRuleSets")]
        public IList<ResourceAccessRuleSetIdOnly> ResourceAccessRuleSets { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contentType")]
        public static string ContentType { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (ResourceAccessRules != null)
            {
                foreach (var element in ResourceAccessRules)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (ResourceAccessRuleSets != null)
            {
                foreach (var element1 in ResourceAccessRuleSets)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
        }
    }
}
